version: '3.8'

services:
  test_db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: "test"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  redis:
    image: redis:latest
    env_file:
      - .env
    ports:
      - "6379:6379"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    ports:
      - "8010:8000"
    environment:
      - POSTGRES_DB_HOST=test_db
      - REDIS_DB_HOST=redis
    depends_on:
      - test_db
      - redis
    env_file:
      - .env

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery:celery worker --config=celery
    volumes:
      - .:/code
    environment:
      - POSTGRES_DB_HOST=main_db
      - REDIS_DB_HOST=redis
    depends_on:
      - test_db
      - redis
    env_file:
      - .env

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery:celery beat --loglevel=info
    volumes:
      - .:/code
    environment:
      - POSTGRES_DB_HOST=main_db
      - REDIS_DB_HOST=redis
    depends_on:
      - redis
      - test_db
      - celery_worker
    env_file:
      - .env

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery:celery flower --port=5555
    volumes:
      - .:/code
    environment:
      - POSTGRES_DB_HOST=main_db
      - REDIS_DB_HOST=redis
    depends_on:
      - redis
      - test_db
      - celery_worker
    env_file:
      - .env
    ports:
      - "5555:5555"
volumes:
  postgres_test_data:
